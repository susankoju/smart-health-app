{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["FHIR","window","App","clientWrite","e","preventDefault","oauth2","ready","then","client","create","res","console","log","JSON","stringify","err","stack","request","catch","error","className","type","onClick","this","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","message"],"mappings":"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","file":"static/js/main.a5dea3f2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst FHIR = window.FHIR;\n\nclass App extends React.Component {\n\n\n\n  clientWrite = (e) => {\n    e.preventDefault();\n    FHIR.oauth2.ready().then((client) => {\n      // client.patient.read().then(\n      //   res => {\n      //     console.log(JSON.stringify(res));\n      //   },\n      //   err => {\n      //     console.log(err.stack);\n      //   }\n      // )\n      \n      // client.request(\"/Patient\", { pageLimit: 2 }).then(\n      //   res => {\n      //     console.log(JSON.stringify(res));\n      //   },\n      //   err => {\n      //     console.log(err.stack);\n      //   }\n      // )\n\n      client.create({\n        \"resourceType\": \"Patient\",\n        \"id\": \"5ee05359-57bf-4cee-8e89-91382c07e162\",\n        \"meta\": {\n            \"versionId\": \"2\",\n            \"lastUpdated\": \"2019-06-05T02:52:35.946-04:00\",\n            \"tag\": [\n                {\n                    \"system\": \"https://smarthealthit.org/tags\",\n                    \"code\": \"synthea-5-2019\"\n                }\n            ]\n        },\n        \"text\": {\n            \"status\": \"generated\",\n            \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\">Generated by <a href=\\\"https://github.com/synthetichealth/synthea\\\">Synthea</a>.Version identifier: v2.4.0-100-g26a4b936\\n .   Person seed: -6787263189570604868  Population seed: 1559319163074</div>\"\n        },\n        \"extension\": [\n            {\n                \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-race\",\n                \"extension\": [\n                    {\n                        \"url\": \"ombCategory\",\n                        \"valueCoding\": {\n                            \"system\": \"urn:oid:2.16.840.1.113883.6.238\",\n                            \"code\": \"2106-3\",\n                            \"display\": \"White\"\n                        }\n                    },\n                    {\n                        \"url\": \"text\",\n                        \"valueString\": \"White\"\n                    }\n                ]\n            },\n            {\n                \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity\",\n                \"extension\": [\n                    {\n                        \"url\": \"ombCategory\",\n                        \"valueCoding\": {\n                            \"system\": \"urn:oid:2.16.840.1.113883.6.238\",\n                            \"code\": \"2186-5\",\n                            \"display\": \"Not Hispanic or Latino\"\n                        }\n                    },\n                    {\n                        \"url\": \"text\",\n                        \"valueString\": \"Not Hispanic or Latino\"\n                    }\n                ]\n            },\n            {\n                \"url\": \"http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName\",\n                \"valueString\": \"Luise Grant\"\n            },\n            {\n                \"url\": \"http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex\",\n                \"valueCode\": \"M\"\n            },\n            {\n                \"url\": \"http://hl7.org/fhir/StructureDefinition/patient-birthPlace\",\n                \"valueAddress\": {\n                    \"city\": \"Lee\",\n                    \"state\": \"Massachusetts\",\n                    \"country\": \"US\"\n                }\n            },\n            {\n                \"url\": \"http://synthetichealth.github.io/synthea/disability-adjusted-life-years\",\n                \"valueDecimal\": 0.3868990459023335\n            },\n            {\n                \"url\": \"http://synthetichealth.github.io/synthea/quality-adjusted-life-years\",\n                \"valueDecimal\": 23.613100954097668\n            }\n        ],\n        \"identifier\": [\n            {\n                \"system\": \"https://github.com/synthetichealth/synthea\",\n                \"value\": \"3f228315-d2de-4292-a56a-b7c120c2875d\"\n            },\n            {\n                \"type\": {\n                    \"coding\": [\n                        {\n                            \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n                            \"code\": \"MR\",\n                            \"display\": \"Medical Record Number\"\n                        }\n                    ],\n                    \"text\": \"Medical Record Number\"\n                },\n                \"system\": \"http://hospital.smarthealthit.org\",\n                \"value\": \"3f228315-d2de-4292-a56a-b7c120c2875d\"\n            },\n            {\n                \"type\": {\n                    \"coding\": [\n                        {\n                            \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n                            \"code\": \"SS\",\n                            \"display\": \"Social Security Number\"\n                        }\n                    ],\n                    \"text\": \"Social Security Number\"\n                },\n                \"system\": \"http://hl7.org/fhir/sid/us-ssn\",\n                \"value\": \"999-58-3251\"\n            },\n            {\n                \"type\": {\n                    \"coding\": [\n                        {\n                            \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n                            \"code\": \"DL\",\n                            \"display\": \"Driver's License\"\n                        }\n                    ],\n                    \"text\": \"Driver's License\"\n                },\n                \"system\": \"urn:oid:2.16.840.1.113883.4.3.25\",\n                \"value\": \"S99913820\"\n            },\n            {\n                \"type\": {\n                    \"coding\": [\n                        {\n                            \"system\": \"http://terminology.hl7.org/CodeSystem/v2-0203\",\n                            \"code\": \"PPN\",\n                            \"display\": \"Passport Number\"\n                        }\n                    ],\n                    \"text\": \"Passport Number\"\n                },\n                \"system\": \"http://standardhealthrecord.org/fhir/StructureDefinition/passportNumber\",\n                \"value\": \"X50228204X\"\n            }\n        ],\n        \"name\": [\n            {\n                \"use\": \"official\",\n                \"family\": \"Alwas\",\n                \"given\": [\n                    \"Tryer\"\n                ],\n                \"prefix\": [\n                    \"Mr.\"\n                ]\n            }\n        ],\n        \"telecom\": [\n            {\n                \"system\": \"phone\",\n                \"value\": \"555-901-9296\",\n                \"use\": \"home\"\n            }\n        ],\n        \"gender\": \"male\",\n        \"birthDate\": \"1962-05-17\",\n        \"deceasedDateTime\": \"1987-04-16T04:54:18-04:00\",\n        \"address\": [\n            {\n                \"extension\": [\n                    {\n                        \"url\": \"http://hl7.org/fhir/StructureDefinition/geolocation\",\n                        \"extension\": [\n                            {\n                                \"url\": \"latitude\",\n                                \"valueDecimal\": 42.307905\n                            },\n                            {\n                                \"url\": \"longitude\",\n                                \"valueDecimal\": -71.436196\n                            }\n                        ]\n                    }\n                ],\n                \"line\": [\n                    \"440 Russel Common Apt 7\"\n                ],\n                \"city\": \"Framingham\",\n                \"state\": \"Massachusetts\",\n                \"postalCode\": \"01701\",\n                \"country\": \"US\"\n            }\n        ],\n        \"maritalStatus\": {\n            \"coding\": [\n                {\n                    \"system\": \"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\",\n                    \"code\": \"S\",\n                    \"display\": \"Never Married\"\n                }\n            ],\n            \"text\": \"Never Married\"\n        },\n        \"multipleBirthBoolean\": false,\n        \"communication\": [\n            {\n                \"language\": {\n                    \"coding\": [\n                        {\n                            \"system\": \"urn:ietf:bcp:47\",\n                            \"code\": \"en-US\",\n                            \"display\": \"English\"\n                        }\n                    ],\n                    \"text\": \"English\"\n                }\n            }\n        ]\n      }).then(\n        res => {\n          console.log(JSON.stringify(res));\n        },\n        err => {\n          console.log(err.stack);\n        }\n      )\n\n      client.request(\"Patient\").then(console.log).catch(console.error);\n    })\n  }\n\n  render(){\n    FHIR.oauth2.ready().then(function(client) {\n                    \n      // // Render the current patient (or any error)\n      // client.patient.read().then(\n      //     function(pt) {\n      //         console.log(JSON.stringify(pt, null, 4));\n      //     },\n      //     function(error) {\n      //         console.log(error.stack);\n      //     }\n      // );\n      \n      // // Get MedicationRequests for the selected patient\n      // client.request(\"/MedicationRequest?patient=\" + client.patient.id, {\n      //     resolveReferences: [ \"medicationReference\" ],\n      //     graph: true\n      // })\n      \n      // // Reject if no MedicationRequests are found\n      // .then(function(data) {\n      //     if (!data.entry || !data.entry.length) {\n      //         throw new Error(\"No medications found for the selected patient\");\n      //     }\n      //     return data.entry;\n      // })\n      \n\n      // // Render the current patient's medications (or any error)\n      // .then(\n      //     function(meds) {\n      //         console.log(JSON.stringify(meds, null, 4));\n      //     },\n      //     function(error) {\n      //         console.log(error.stack);\n      //     }\n      // );\n\n      client.request(\"Patient\").then(console.log).catch(console.error);\n\n    }).catch(console.error);\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          SMART\n        </header>\n        <form>\n          <input type=\"submit\" onClick={this.clientWrite}></input>\n        </form>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}